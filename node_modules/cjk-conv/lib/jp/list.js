"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Created by user on 2019/7/26.
 */
const core_1 = require("./core");
const array_hyper_unique_1 = require("array-hyper-unique");
function _fromA2B(char, from, to, options = {}) {
    const _table = options && options.safe ? core_1.TABLE_SAFE : core_1.TABLE;
    if (_table[from] && _table[to]) {
        let list = [];
        if (_table[from][char]) {
            if (_table[from][char][to]) {
                list.push(_table[from][char][to]);
            }
            Object.values(_table[to])
                .forEach(row => {
                if (row[from] === char && row[to]) {
                    list.push(row[to]);
                }
            });
            list = array_hyper_unique_1.array_unique_overwrite(list);
        }
        return list;
    }
    throw new RangeError(`${from}, ${to} is not exists in TABLE`);
}
exports._fromA2B = _fromA2B;
function jp2zht(char, options) {
    return _fromA2B(char, core_1.KEY_JP, core_1.KEY_ZHT, options);
}
exports.jp2zht = jp2zht;
function jp2zhs(char, options) {
    return _fromA2B(char, core_1.KEY_JP, core_1.KEY_ZHS, options);
}
exports.jp2zhs = jp2zhs;
function zht2jp(char, options) {
    return _fromA2B(char, core_1.KEY_ZHT, core_1.KEY_JP, options);
}
exports.zht2jp = zht2jp;
function zhs2jp(char, options) {
    return _fromA2B(char, core_1.KEY_ZHS, core_1.KEY_JP, options);
}
exports.zhs2jp = zhs2jp;
function zh2jp(char, options) {
    let arr = zht2jp(char, options)
        .concat(zhs2jp(char, options));
    return array_hyper_unique_1.array_unique_overwrite(arr);
}
exports.zh2jp = zh2jp;
function jp2zh(char, options) {
    let arr = jp2zht(char, options)
        .concat(jp2zhs(char, options));
    return array_hyper_unique_1.array_unique_overwrite(arr);
}
exports.jp2zh = jp2zh;
exports.default = exports;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxpc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7R0FFRztBQUNILGlDQUFtRjtBQUNuRiwyREFBNEQ7QUFPNUQsU0FBZ0IsUUFBUSxDQUFDLElBQVksRUFBRSxJQUFrQixFQUFFLEVBQWdCLEVBQUUsVUFBb0IsRUFBRTtJQUVsRyxNQUFNLE1BQU0sR0FBRyxPQUFPLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsaUJBQVUsQ0FBQyxDQUFDLENBQUMsWUFBSyxDQUFDO0lBRTVELElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFDOUI7UUFDQyxJQUFJLElBQUksR0FBYSxFQUFFLENBQUM7UUFFeEIsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQ3RCO1lBQ0MsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQzFCO2dCQUNDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7YUFDbEM7WUFFRCxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztpQkFDdkIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFO2dCQUVkLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQ2pDO29CQUNDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7aUJBQ25CO1lBRUYsQ0FBQyxDQUFDLENBQ0Y7WUFFRCxJQUFJLEdBQUcsMkNBQXNCLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDcEM7UUFFRCxPQUFPLElBQUksQ0FBQTtLQUNYO0lBRUQsTUFBTSxJQUFJLFVBQVUsQ0FBQyxHQUFHLElBQUksS0FBSyxFQUFFLHlCQUF5QixDQUFDLENBQUE7QUFDOUQsQ0FBQztBQWpDRCw0QkFpQ0M7QUFFRCxTQUFnQixNQUFNLENBQUMsSUFBWSxFQUFFLE9BQWtCO0lBRXRELE9BQU8sUUFBUSxDQUFDLElBQUksRUFBRSxhQUFNLEVBQUUsY0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFBO0FBQ2hELENBQUM7QUFIRCx3QkFHQztBQUVELFNBQWdCLE1BQU0sQ0FBQyxJQUFZLEVBQUUsT0FBa0I7SUFFdEQsT0FBTyxRQUFRLENBQUMsSUFBSSxFQUFFLGFBQU0sRUFBRSxjQUFPLEVBQUUsT0FBTyxDQUFDLENBQUE7QUFDaEQsQ0FBQztBQUhELHdCQUdDO0FBRUQsU0FBZ0IsTUFBTSxDQUFDLElBQVksRUFBRSxPQUFrQjtJQUV0RCxPQUFPLFFBQVEsQ0FBQyxJQUFJLEVBQUUsY0FBTyxFQUFFLGFBQU0sRUFBRSxPQUFPLENBQUMsQ0FBQTtBQUNoRCxDQUFDO0FBSEQsd0JBR0M7QUFFRCxTQUFnQixNQUFNLENBQUMsSUFBWSxFQUFFLE9BQWtCO0lBRXRELE9BQU8sUUFBUSxDQUFDLElBQUksRUFBRSxjQUFPLEVBQUUsYUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFBO0FBQ2hELENBQUM7QUFIRCx3QkFHQztBQUVELFNBQWdCLEtBQUssQ0FBQyxJQUFZLEVBQUUsT0FBa0I7SUFFckQsSUFBSSxHQUFHLEdBQUcsTUFBTSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUM7U0FDN0IsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUVoQyxPQUFPLDJDQUFzQixDQUFDLEdBQUcsQ0FBQyxDQUFBO0FBQ25DLENBQUM7QUFORCxzQkFNQztBQUVELFNBQWdCLEtBQUssQ0FBQyxJQUFZLEVBQUUsT0FBa0I7SUFFckQsSUFBSSxHQUFHLEdBQUcsTUFBTSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUM7U0FDN0IsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUVoQyxPQUFPLDJDQUFzQixDQUFDLEdBQUcsQ0FBQyxDQUFBO0FBQ25DLENBQUM7QUFORCxzQkFNQztBQUVELGtCQUFlLE9BQWtDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgdXNlciBvbiAyMDE5LzcvMjYuXG4gKi9cbmltcG9ydCB7IFRBQkxFLCBLRVlfSlAsIEtFWV9aSFQsIEtFWV9aSFMsIFRBQkxFX1NBRkUsIElLRVlfRlJPTV9UTyB9IGZyb20gJy4vY29yZSc7XG5pbXBvcnQgeyBhcnJheV91bmlxdWVfb3ZlcndyaXRlIH0gZnJvbSAnYXJyYXktaHlwZXItdW5pcXVlJztcblxuZXhwb3J0IGludGVyZmFjZSBJT3B0aW9uc1xue1xuXHRzYWZlPzogYm9vbGVhblxufVxuXG5leHBvcnQgZnVuY3Rpb24gX2Zyb21BMkIoY2hhcjogc3RyaW5nLCBmcm9tOiBJS0VZX0ZST01fVE8sIHRvOiBJS0VZX0ZST01fVE8sIG9wdGlvbnM6IElPcHRpb25zID0ge30pXG57XG5cdGNvbnN0IF90YWJsZSA9IG9wdGlvbnMgJiYgb3B0aW9ucy5zYWZlID8gVEFCTEVfU0FGRSA6IFRBQkxFO1xuXG5cdGlmIChfdGFibGVbZnJvbV0gJiYgX3RhYmxlW3RvXSlcblx0e1xuXHRcdGxldCBsaXN0OiBzdHJpbmdbXSA9IFtdO1xuXG5cdFx0aWYgKF90YWJsZVtmcm9tXVtjaGFyXSlcblx0XHR7XG5cdFx0XHRpZiAoX3RhYmxlW2Zyb21dW2NoYXJdW3RvXSlcblx0XHRcdHtcblx0XHRcdFx0bGlzdC5wdXNoKF90YWJsZVtmcm9tXVtjaGFyXVt0b10pO1xuXHRcdFx0fVxuXG5cdFx0XHRPYmplY3QudmFsdWVzKF90YWJsZVt0b10pXG5cdFx0XHRcdC5mb3JFYWNoKHJvdyA9PiB7XG5cblx0XHRcdFx0XHRpZiAocm93W2Zyb21dID09PSBjaGFyICYmIHJvd1t0b10pXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGlzdC5wdXNoKHJvd1t0b10pO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHR9KVxuXHRcdFx0O1xuXG5cdFx0XHRsaXN0ID0gYXJyYXlfdW5pcXVlX292ZXJ3cml0ZShsaXN0KTtcblx0XHR9XG5cblx0XHRyZXR1cm4gbGlzdFxuXHR9XG5cblx0dGhyb3cgbmV3IFJhbmdlRXJyb3IoYCR7ZnJvbX0sICR7dG99IGlzIG5vdCBleGlzdHMgaW4gVEFCTEVgKVxufVxuXG5leHBvcnQgZnVuY3Rpb24ganAyemh0KGNoYXI6IHN0cmluZywgb3B0aW9ucz86IElPcHRpb25zKVxue1xuXHRyZXR1cm4gX2Zyb21BMkIoY2hhciwgS0VZX0pQLCBLRVlfWkhULCBvcHRpb25zKVxufVxuXG5leHBvcnQgZnVuY3Rpb24ganAyemhzKGNoYXI6IHN0cmluZywgb3B0aW9ucz86IElPcHRpb25zKVxue1xuXHRyZXR1cm4gX2Zyb21BMkIoY2hhciwgS0VZX0pQLCBLRVlfWkhTLCBvcHRpb25zKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gemh0MmpwKGNoYXI6IHN0cmluZywgb3B0aW9ucz86IElPcHRpb25zKVxue1xuXHRyZXR1cm4gX2Zyb21BMkIoY2hhciwgS0VZX1pIVCwgS0VZX0pQLCBvcHRpb25zKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gemhzMmpwKGNoYXI6IHN0cmluZywgb3B0aW9ucz86IElPcHRpb25zKVxue1xuXHRyZXR1cm4gX2Zyb21BMkIoY2hhciwgS0VZX1pIUywgS0VZX0pQLCBvcHRpb25zKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gemgyanAoY2hhcjogc3RyaW5nLCBvcHRpb25zPzogSU9wdGlvbnMpXG57XG5cdGxldCBhcnIgPSB6aHQyanAoY2hhciwgb3B0aW9ucylcblx0XHQuY29uY2F0KHpoczJqcChjaGFyLCBvcHRpb25zKSk7XG5cblx0cmV0dXJuIGFycmF5X3VuaXF1ZV9vdmVyd3JpdGUoYXJyKVxufVxuXG5leHBvcnQgZnVuY3Rpb24ganAyemgoY2hhcjogc3RyaW5nLCBvcHRpb25zPzogSU9wdGlvbnMpXG57XG5cdGxldCBhcnIgPSBqcDJ6aHQoY2hhciwgb3B0aW9ucylcblx0XHQuY29uY2F0KGpwMnpocyhjaGFyLCBvcHRpb25zKSk7XG5cblx0cmV0dXJuIGFycmF5X3VuaXF1ZV9vdmVyd3JpdGUoYXJyKVxufVxuXG5leHBvcnQgZGVmYXVsdCBleHBvcnRzIGFzIHR5cGVvZiBpbXBvcnQoJy4vbGlzdCcpO1xuIl19